# A reusable workflow for creating cross-platform release binaries/libraries

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build-for-release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1
      - run: |
          sudo apt-get update
          sudo apt install -y libcurl4-openssl-dev
      # Linux/Wasm
      - run: zig build
      - run: zip -j fastfec-linux-x86_64-${{ inputs.version }}.zip zig-out/bin/fastfec
      - run: mv zig-out/lib/libfastfec.so libfastfec-linux-x86_64-${{ inputs.version }}.so
      - run: zig build -Dtarget=aarch64-linux
      - run: zip -j fastfec-linux-aarch64-${{ inputs.version }}.zip zig-out/bin/fastfec
      - run: mv zig-out/lib/libfastfec.so libfastfec-linux-aarch64-${{ inputs.version }}.so
      - run: zig build -Dwasm
      - run: mv zig-out/lib/fastfec.wasm libfastfec-${{ inputs.version }}.wasm
      # Mac
      - run: zig build -Dtarget=x86_64-macos
      - run: zip -j fastfec-macos-x86_64-${{ inputs.version }}.zip zig-out/bin/fastfec
      - run: mv zig-out/lib/libfastfec.dylib libfastfec-macos-x86_64-${{ inputs.version }}.dylib
      - run: zig build -Dtarget=aarch64-macos
      - run: zip -j fastfec-macos-aarch64-${{ inputs.version }}.zip zig-out/bin/fastfec
      - run: mv zig-out/lib/libfastfec.dylib libfastfec-macos-aarch64-${{ inputs.version }}.dylib
      # Windows
      - run: zig build -Dtarget=x86_64-windows
      - run: zip -j fastfec-windows-x86_64-${{ inputs.version }}.zip zig-out/bin/fastfec.exe
      - run: mv zig-out/lib/fastfec.dll libfastfec-windows-x86_64-${{ inputs.version }}.dll
      - run: zig build -Dtarget=aarch64-windows
      - run: zip -j fastfec-windows-aarch64-${{ inputs.version }}.zip zig-out/bin/fastfec.exe
      - run: mv zig-out/lib/fastfec.dll libfastfec-windows-aarch64-${{ inputs.version }}.dll
